services:
  # Reverse Proxy - Only entry point
  nginx:
    build: ./nginx
    ports:
      - "3080:80"    # External port 3080, internal port 80
      - "3443:443"   # External port 3443, internal port 443
    depends_on:
      - gateway
      # - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network

  # API Gateway - Exposed for development
  gateway:
    build: ./gateway
    ports:
      - "8000:8000"  # Expose for direct GraphQL access during development
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8000
      - USER_SERVICE_URL=http://user-service:8000
      - FILE_SERVICE_URL=http://file-service:8000
      - PAYMENT_SERVICE_URL=http://payment-service:8000
      - NOTIFICATION_SERVICE_URL=http://notification-service:8000
    depends_on:
      - auth-service
      - user-service
      - file-service
      - payment-service
      - notification-service
    networks:
      - app-network

  # Microservices - Internal only (no exposed ports)
  auth-service:
    build: ./auth-service
    environment:
      - MONGODB_URL=mongodb://mongo:27017/auth_db
      - REDIS_URL=redis://redis:6379
      - PORT=8000
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    # No ports exposed - only internal communication

  user-service:
    build: ./user-service
    environment:
      - MONGODB_URL=mongodb://mongo:27017/user_db
      - PORT=8000
    depends_on:
      - mongo
    networks:
      - app-network
    # No ports exposed - only internal communication

  file-service:
    build: ./file-service
    environment:
      - MONGODB_URL=mongodb://mongo:27017/file_db
      - MINIO_URL=http://minio:9000
      - PORT=8000
    depends_on:
      - mongo
      - minio
    networks:
      - app-network
    # No ports exposed - only internal communication

  payment-service:
    build: ./payment-service
    environment:
      - MONGODB_URL=mongodb://mongo:27017/payment_db
      - WEB3_PROVIDER=https://mainnet.infura.io/v3/YOUR_INFURA_KEY
      - REDIS_URL=redis://redis:6379
      - PORT=8000
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    # No ports exposed - only internal communication

  notification-service:
    build: ./notification-service
    environment:
      - REDIS_URL=redis://redis:6379
      - PORT=8000
    depends_on:
      - redis
    networks:
      - app-network
    # No ports exposed - only internal communication

  # Frontend
  # frontend:
  #   build: ./frontend
  #   networks:
  #     - app-network
    # No ports exposed - served through nginx

  # Database Services
  mongo:
    image: mongo:latest
    volumes:
      - ./data/mongo:/data/db
    networks:
      - app-network
    # No ports exposed - only internal access
    restart: unless-stopped

  redis:
    image: redis:latest
    volumes:
      - ./data/redis:/data
    networks:
      - app-network
    # No ports exposed - only internal access
    restart: unless-stopped

  # File Storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web Console
    volumes:
      - ./data/minio:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    networks:
      - app-network
    restart: unless-stopped

# Network cho tất cả services
networks:
  app-network:
    driver: bridge

# Volumes cho data persistence
volumes:
  mongo_data:
  redis_data:
  minio_data:

